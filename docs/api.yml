openapi: 3.0.3
info:
  title: Library API
  version: 1.0.0
  description: STD22035
servers:
  - url: https://library.com
tags:
  - name: books
  - name: authors
paths:
  /books:
    get:
      tags:
        - "books"
      summary: Get all books
      description: Retrieve books ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter books by name
          required: false
          schema:
            type: string
        - in: query
          name: releaseDateFrom
          description: Filter books with a release date equal to or after this date (ISO 8601 format).
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: releaseDateTo
          description: Filter books with a release date equal to or before this date (ISO 8601 format).
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: List of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      tags:
        - "books"
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /authors:
    get:
      tags:
        - "authors"
      summary: Get all Authors
      description: Retrieve authors filtered by authorName.
      operationId: getAuthors
      parameters:
        - in: query
          name: authorName
          description: Filter authors by name
          required: false
          schema:
            type: string
      responses:
        200:
          description: List of filtered authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    put:
      tags:
        - "authors"
      summary: Create or update a list of authors
      operationId: crupdateAuthors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Author'
      responses:
        200:
          description: The list of created or updated authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
  /delete/{aid}:  
    delete:
      tags:
        - "authors"
      summary: Delete an author
      description: Delete an author by id
      parameters:
        - name: aid
          in: path
          description: The author's ID to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: the author deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        Author:
          $ref: "#/components/schemas/Author"
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date
    Author:
      type: object
      properties:
        id:
          type: string
        authorName:
          type: string
        Sex:
          $ref: "#/components/schemas/Sex"
    Sex:
      type: string
      enum:
        - M
        - F