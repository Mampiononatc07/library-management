openapi: 3.0.3
info:
  title: Library API
  version: 1.2.0
  description: STD22035
servers:
  - url: https://library.com
tags:
  - name: books
  - name: authors
paths:
  /books:
    get:
      tags:
        - "books"
      summary: Get all books
      description: Retrieve books ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter books by name
          required: false
          schema:
            type: string
        - in: query
          name: releaseDateFrom
          description: Filter books with a release date equal to or after this date (ISO 8601 format).
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: releaseDateTo
          description: Filter books with a release date equal to or before this date (ISO 8601 format).
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/queryPagination'
        - $ref: '#/components/parameters/pathPagination'
      responses:
        200:
          description: List of filtered books
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    put:
      tags:
        - "books"
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /books/{bookId}/authors/{authorId}:
    put:
      tags:
        - "books"
      summary: Update the author of a Book
      description: Modify the author of a book by specifying their respective IDs.
      operationId: updateBookAuthor
      parameters:
        - name: bookId
          in: path
          description: The ID of the book to update.
          required: true
          schema:
            type: string
        - name: authorId
          in: path
          description: The ID of the new author.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Author of the book updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /books/authors:
    put:
      tags:
        - "books"
      summary: Update authors for multiple books
      description: Update the authors of multiple books by specifying a list of bookId and authorId pairs.
      operationId: updateBookAuthor
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  bookId:
                    type: string
                  authorId:
                    type: string
      responses:
        200:
          description: Authors of the specified books updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /authors:
    get:
      tags:
        - "authors"
      summary: Get all Authors
      description: Retrieve authors filtered by authorName.
      operationId: getAuthors
      parameters:
        - in: query
          name: authorName
          description: Filter authors by name
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/queryPagination'
      responses:
        200:
          description: List of filtered authors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    put:
      tags:
        - "authors"
      summary: Create or update a list of authors
      operationId: crupdateAuthors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Author'
      responses:
        200:
          description: The list of created or updated authors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /delete/{aid}:
    delete:
      tags:
        - "authors"
      summary: Delete an author
      description: Delete an author by id
      parameters:
        - name: aid
          in: path
          description: The author's ID to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: the author deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /delete:
    delete:
      tags:
        - "authors"
      summary: Delete authors
      description: Delete authors by ID(s)
      parameters:
        - in: query
          name: ids
          description: The author ID(s) to delete (comma-separated list)
          required: true
          schema:
            type: string
      responses:
        200:
          description: Authors deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
components:
  schemas:
    Response:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        body:
          type: object
    Status:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    BookResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - properties:
            body:
              $ref: '#/components/schemas/Book'
    AuthorResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - properties:
            body:
              $ref: '#/components/schemas/Author'
    Book:
      allOf:
        - $ref: "#/components/schemas/CrupdateBooks"
        - properties:
            Author:
              $ref: "#/components/schemas/Author"
    Author:
      type: object
      properties:
        id:
          type: string
        authorName:
          type: string
        Sex:
          $ref: "#/components/schemas/Sex"
    Sex:
      type: string
      enum:
        - M
        - F
    CrupdateBooks:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
  parameters:
    queryPagination:
      name: page
      in: query
      description: Page number for pagination
      required: true
      schema:
        type: integer
    pathPagination:
      name: pageSize
      in: path
      description: Number of items per page
      required: true
      schema:
        type: integer
